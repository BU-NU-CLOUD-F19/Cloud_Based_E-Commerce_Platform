# TODO: the actual usernames/passwords shouldn't be stored in this file. We need
# a way to put those somewhere that's not in version control.
#
# Use docker-compose file version 3
version: "3"
services:
  # Database service
  postgres:
    # Image based on Alpine is smaller
    image: "postgres:12-alpine"
    container_name: "postgres"
    environment:
      # The password for the database, can be changed to whatever.
      # Default username is 'postgres', can be changed with POSTGRES_USER.
      # Another useful variable is POSTGRES_DB, the name of the database.
      # Ref: https://hub.docker.com/_/postgres
      POSTGRES_PASSWORD: northeastern

    # Forward ports, format 'container:host'
    ports:
      - 5432:5432

    # Mount local directories on the container filesystem
    volumes:
      # A place to store postgres data
      - ./db/db-data:/var/lib/postgresql/data
      # Script to initialize a test database
      - ./db/test-db/init-test-db.sql:/docker-entrypoint-initdb.d/init-test-db.sql
      - ./db/test-db/init-demo-db.sql:/docker-entrypoint-initdb.d/init-demo-db.sql
    restart: unless-stopped

  # Pgadmin service (web interface)
  pgadmin:
    image: "dpage/pgadmin4"

    # Can't have the web interface without a database
    depends_on:
      - postgres
    container_name: "pgadmin"
    environment:
      # Credentials used to sign in to the web interface
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./db/pgadmin:/var/lib/pgadmin
    ports:
      # Use the value of an environment variable if it's set. If not, use local
      # port 5050 for the web interface (port 80 in the container).
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped

  cart:
    build: ./cart
    container_name: "cart"

    # Forward ports, format 'container:host'
    ports:
      - 3000:3000

    # Mount local directories on the container filesystem.
    # Should not happen in production.
    volumes:
      - ./cart/src:/usr/app/src
      - ./cart/app.js:/usr/app/app.js
      - ./cart/process.json:/usr/app/process.json
      - ./cart/registrations.js:/usr/app/registrations.js
      - ./cart/.cartrc:/usr/app/.cartrc
      - ./cart/log:/usr/app/log
      # The above line takes care of making the log dir accessible, but should be
      #   handled differently in production.

    restart: unless-stopped

